# KDE tags expanded automatically by am_edit - $Revision: 1.265.2.2 $ 
# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# just set the variable


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@
#>- 
bindir = @bindir@
#>+ 3
DEPDIR = .deps

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = @build_alias@
build_triplet = @build@
host_alias = @host_alias@
host_triplet = @host@
target_alias = @target_alias@
target_triplet = @target@
ACCESS_SUBDIR = @ACCESS_SUBDIR@
ARTSCCONFIG = @ARTSCCONFIG@
AS = @AS@
AUDIOCD_SUBDIR = @AUDIOCD_SUBDIR@
AUTODIRS = @AUTODIRS@
BZIP2FILES = @BZIP2FILES@
CC = @CC@
CDPARANOIA_INCS = @CDPARANOIA_INCS@
CDPARANOIA_LIBS = @CDPARANOIA_LIBS@
CDPARANOIA_RPATH = @CDPARANOIA_RPATH@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CUPSSUBDIR = @CUPSSUBDIR@
CXX = @CXX@
CXXCPP = @CXXCPP@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DLLTOOL = @DLLTOOL@
DPMSINC = @DPMSINC@
DPMSLIB = @DPMSLIB@
EXEEXT = @EXEEXT@
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
GLINC = @GLINC@
GLLIB = @GLLIB@
GL_SAVERS = @GL_SAVERS@
GMSGFMT = @GMSGFMT@
IDL = @IDL@
IDL_DEPENDENCIES = @IDL_DEPENDENCIES@
JAR = @JAR@
JAVAC = @JAVAC@
JAVAH = @JAVAH@
JVMLIBS = @JVMLIBS@
KCM_AUDIOCD = @KCM_AUDIOCD@
KDECONFIG = @KDECONFIG@
KDEDB_INCLUDES = @KDEDB_INCLUDES@
KDEDB_LIBS = @KDEDB_LIBS@
KDEDB_SUBDIR = @KDEDB_SUBDIR@
KDE_BINDIR = @KDE_BINDIR@
KDE_CONFDIR = @KDE_CONFDIR@
KDE_CXXFLAGS = @KDE_CXXFLAGS@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
KERBEROS_INCS = @KERBEROS_INCS@
KERBEROS_LIBS = @KERBEROS_LIBS@
KERBEROS_ROOT = @KERBEROS_ROOT@
KRB_RPATH = @KRB_RPATH@
LAME_INCS = @LAME_INCS@
LAME_LIBS = @LAME_LIBS@
LAME_RPATH = @LAME_RPATH@
LDAP_INCS = @LDAP_INCS@
LDAP_LIBS = @LDAP_LIBS@
LDAP_RPATH = @LDAP_RPATH@
LDAP_SUBDIR = @LDAP_SUBDIR@
LIBALIB = @LIBALIB@
LIBCFG = @LIBCFG@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBCURSES = @LIBCURSES@
LIBDEVINFO = @LIBDEVINFO@
LIBDL = @LIBDL@
LIBGEN = @LIBGEN@
LIBJPEG = @LIBJPEG@
LIBKSTAT = @LIBKSTAT@
LIBMICO = @LIBMICO@
LIBOBJS = @LIBOBJS@
LIBODM = @LIBODM@
LIBOSSAUDIO = @LIBOSSAUDIO@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBPYTHON = @LIBPYTHON@
LIBQIMGIO = @LIBQIMGIO@
LIBRESOLV = @LIBRESOLV@
LIBSENSORS = @LIBSENSORS@
LIBSHADOW = @LIBSHADOW@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBSSL = @LIBSSL@
LIBTIFF = @LIBTIFF@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTEMPTER = @LIBUTEMPTER@
LIBUTIL = @LIBUTIL@
LIBXDMCP = @LIBXDMCP@
LIBXINERAMA = @LIBXINERAMA@
LIBZ = @LIBZ@
LIB_CUPS = @LIB_CUPS@
LIB_KAB = @LIB_KAB@
LIB_KDB = @LIB_KDB@
LIB_KDBCORE = @LIB_KDBCORE@
LIB_KDBUI = @LIB_KDBUI@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDEUI = @LIB_KDEUI@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KFORMULA = @LIB_KFORMULA@
LIB_KHTML = @LIB_KHTML@
LIB_KIMGIO = @LIB_KIMGIO@
LIB_KIO = @LIB_KIO@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KWRITE = @LIB_KWRITE@
LIB_LIBS = @LIB_LIBS@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_TRU64_MACH = @LIB_TRU64_MACH@
LIB_X11 = @LIB_X11@
LN_S = @LN_S@
MAKEINFO = @MAKEINFO@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MICO_INCLUDES = @MICO_INCLUDES@
MICO_LDFLAGS = @MICO_LDFLAGS@
MOC = @MOC@
MOTIF_CFLAGS = @MOTIF_CFLAGS@
MOTIF_LIBS = @MOTIF_LIBS@
MSGFMT = @MSGFMT@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
NOREPO = @NOREPO@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PAMLIBS = @PAMLIBS@
PASSWDLIBS = @PASSWDLIBS@
PYTHONINC = @PYTHONINC@
PYTHONLIB = @PYTHONLIB@
PYTHONMODDIR = @PYTHONMODDIR@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
REPO = @REPO@
RUN_KAPPFINDER = @RUN_KAPPFINDER@
SETUIDFLAGS = @SETUIDFLAGS@
SMB_SUBDIR = @SMB_SUBDIR@
SSL_INCLUDES = @SSL_INCLUDES@
SSL_LDFLAGS = @SSL_LDFLAGS@
STRIP = @STRIP@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
UNAME = @UNAME@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
VORBISENC_LIBS = @VORBISENC_LIBS@
VORBISFILE_LIBS = @VORBISFILE_LIBS@
VORBIS_INCS = @VORBIS_INCS@
VORBIS_LIBS = @VORBIS_LIBS@
VORBIS_RPATH = @VORBIS_RPATH@
XDM_CFLAGS = @XDM_CFLAGS@
XGETTEXT = @XGETTEXT@
XMKMF = @XMKMF@
XPMINC = @XPMINC@
XPMLIB = @XPMLIB@
XTESTLIB = @XTESTLIB@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
all_includes = @all_includes@
all_libraries = @all_libraries@
idldir = @idldir@
include_motif = @include_motif@
jni_includes = @jni_includes@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kdmchooserdir = @kdmchooserdir@
link_motif = @link_motif@
micodir = @micodir@
nogroup = @nogroup@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
x_includes = @x_includes@
x_libraries = @x_libraries@

appsdir = $(kde_appsdir)/System
datadir = $(kde_datadir)/ksysguard

kdemime_DATA = x-ksysguard.desktop
kdemimedir = $(kde_mimedir)/application

rcdir = $(kde_datadir)/ksysguard
rc_DATA = ksysguardui.rc

apps_DATA = ksysguard.desktop

lnkdir = $(kde_datadir)/kicker/applets
lnk_DATA = ksysguardapplet.desktop

# set the include path for X, qt and KDE
INCLUDES = $(all_includes)

####### This part is very ksysguard specific
# you can add here more. This one gets installed 
bin_PROGRAMS = ksysguard

# Which sources should be compiled for ksysguard.
#>- ksysguard_SOURCES =  	ColorPicker.cc 	SensorDisplay.cc 	DummyDisplay.cc 	FancyPlotter.cc SignalPlotter.cc 	MultiMeter.cc 	DancingBars.cc BarGraph.cc 	ProcessController.cc ProcessList.cc 	ListView.cc 	LogFile.cc LogFileSettings.cc 	StyleEngine.cc 	SensorLogger.cc 	SensorBrowser.cc  	SensorManager.cc 	SensorAgent.cc SensorShellAgent.cc SensorSocketAgent.cc 	WorkSheet.cc Workspace.cc 	ksysguard.cc ksysguard.skel 	DancingBarsSettings.ui MultiMeterSettings.ui 	FancyPlotterSettings.ui HostConnector.ui WorkSheetSettings.ui 	ListViewSettings.ui BarGraphSettings.ui StyleSettings.ui SensorLoggerDlg.ui SensorLoggerSettings.ui
#>+ 1
ksysguard_SOURCES=ColorPicker.cc 	SensorDisplay.cc 	DummyDisplay.cc 	FancyPlotter.cc SignalPlotter.cc 	MultiMeter.cc 	DancingBars.cc BarGraph.cc 	ProcessController.cc ProcessList.cc 	ListView.cc 	LogFile.cc LogFileSettings.cc 	StyleEngine.cc 	SensorLogger.cc 	SensorBrowser.cc  	SensorManager.cc 	SensorAgent.cc SensorShellAgent.cc SensorSocketAgent.cc 	WorkSheet.cc Workspace.cc 	ksysguard.cc  	  	   	     ksysguard_skel.cc DancingBarsSettings.cc MultiMeterSettings.cc FancyPlotterSettings.cc HostConnector.cc WorkSheetSettings.cc ListViewSettings.cc BarGraphSettings.cc StyleSettings.cc SensorLoggerDlg.cc SensorLoggerSettings.cc


# the library search path
ksysguard_LDFLAGS = $(all_libraries) $(KDE_RPATH)

# the libraries to link against. Be aware of the order. First the libraries,
# that depend on the following ones.
ksysguard_LDADD = $(LIB_KDEUI) $(LIB_KFILE)

data_DATA = ProcessTable.sgrd SystemLoad.sgrd KSysGuardApplet.xml

# This stuff is now for the kicker applet
lib_LTLIBRARIES = libksysguardapplet.la

#>- libksysguardapplet_la_SOURCES =  	ColorPicker.cc 	FancyPlotter.cc SignalPlotter.cc 	SensorDisplay.cc 	StyleEngine.cc 	SensorManager.cc 	SensorAgent.cc SensorShellAgent.cc SensorSocketAgent.cc 	KSysGuardApplet.cc 	FancyPlotterSettings.ui HostConnector.ui KSysGuardAppletSettings.ui 	StyleSettings.ui
#>+ 1
libksysguardapplet_la_SOURCES=ColorPicker.cc 	FancyPlotter.cc SignalPlotter.cc 	SensorDisplay.cc 	StyleEngine.cc 	SensorManager.cc 	SensorAgent.cc SensorShellAgent.cc SensorSocketAgent.cc 	KSysGuardApplet.cc 	   	 FancyPlotterSettings.cc HostConnector.cc KSysGuardAppletSettings.cc StyleSettings.cc


#>- libksysguardapplet_la_METASOURCES = AUTO
libksysguardapplet_la_LDFLAGS = $(all_libraries) -version-info 1:0:0 -module -no-undefined
libksysguardapplet_la_LIBADD = $(LIB_KDEUI) $(LIB_KSYCOCA)

EXTRA_DIST = $(lnk_DATA)

# just to make sure, automake makes them 
METASOURCES = AUTO
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = ../../config.h
CONFIG_CLEAN_FILES = 
LTLIBRARIES =  $(lib_LTLIBRARIES)


DEFS = @DEFS@ -I. -I$(srcdir) -I../..
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
X_CFLAGS = @X_CFLAGS@
X_LIBS = @X_LIBS@
libksysguardapplet_la_DEPENDENCIES = 
#>- libksysguardapplet_la_OBJECTS =  ColorPicker.lo FancyPlotter.lo \
#>- SignalPlotter.lo SensorDisplay.lo StyleEngine.lo SensorManager.lo \
#>- SensorAgent.lo SensorShellAgent.lo SensorSocketAgent.lo \
#>- KSysGuardApplet.lo
#>+ 8
libksysguardapplet_la_final_OBJECTS = libksysguardapplet_la.all_cc.lo 
libksysguardapplet_la_nofinal_OBJECTS = ColorPicker.lo FancyPlotter.lo \
	SignalPlotter.lo SensorDisplay.lo StyleEngine.lo SensorManager.lo \
	SensorAgent.lo SensorShellAgent.lo SensorSocketAgent.lo \
	KSysGuardApplet.lo FancyPlotterSettings.lo HostConnector.lo KSysGuardAppletSettings.lo StyleSettings.lo \
	libksysguardapplet_la_meta_unload.lo 
@KDE_USE_FINAL_FALSE@libksysguardapplet_la_OBJECTS = $(libksysguardapplet_la_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@libksysguardapplet_la_OBJECTS = $(libksysguardapplet_la_final_OBJECTS)
bin_PROGRAMS =  ksysguard$(EXEEXT)
PROGRAMS =  $(bin_PROGRAMS)

#>- ksysguard_OBJECTS =  ColorPicker.$(OBJEXT) SensorDisplay.$(OBJEXT) \
#>- DummyDisplay.$(OBJEXT) FancyPlotter.$(OBJEXT) SignalPlotter.$(OBJEXT) \
#>- MultiMeter.$(OBJEXT) DancingBars.$(OBJEXT) BarGraph.$(OBJEXT) \
#>- ProcessController.$(OBJEXT) ProcessList.$(OBJEXT) ListView.$(OBJEXT) \
#>- LogFile.$(OBJEXT) LogFileSettings.$(OBJEXT) StyleEngine.$(OBJEXT) \
#>- SensorLogger.$(OBJEXT) SensorBrowser.$(OBJEXT) SensorManager.$(OBJEXT) \
#>- SensorAgent.$(OBJEXT) SensorShellAgent.$(OBJEXT) \
#>- SensorSocketAgent.$(OBJEXT) WorkSheet.$(OBJEXT) Workspace.$(OBJEXT) \
#>- ksysguard.$(OBJEXT)
#>+ 13
ksysguard_final_OBJECTS = ksysguard.all_cc.o 
ksysguard_nofinal_OBJECTS = ColorPicker.$(OBJEXT) SensorDisplay.$(OBJEXT) \
	DummyDisplay.$(OBJEXT) FancyPlotter.$(OBJEXT) SignalPlotter.$(OBJEXT) \
	MultiMeter.$(OBJEXT) DancingBars.$(OBJEXT) BarGraph.$(OBJEXT) \
	ProcessController.$(OBJEXT) ProcessList.$(OBJEXT) ListView.$(OBJEXT) \
	LogFile.$(OBJEXT) LogFileSettings.$(OBJEXT) StyleEngine.$(OBJEXT) \
	SensorLogger.$(OBJEXT) SensorBrowser.$(OBJEXT) SensorManager.$(OBJEXT) \
	SensorAgent.$(OBJEXT) SensorShellAgent.$(OBJEXT) \
	SensorSocketAgent.$(OBJEXT) WorkSheet.$(OBJEXT) Workspace.$(OBJEXT) \
	ksysguard.$(OBJEXT) ksysguard_skel.$(OBJEXT) DancingBarsSettings.$(OBJEXT) MultiMeterSettings.$(OBJEXT) FancyPlotterSettings.$(OBJEXT) HostConnector.$(OBJEXT) WorkSheetSettings.$(OBJEXT) ListViewSettings.$(OBJEXT) BarGraphSettings.$(OBJEXT) StyleSettings.$(OBJEXT) SensorLoggerDlg.$(OBJEXT) SensorLoggerSettings.$(OBJEXT) \
	ksysguard_meta_unload.o 
@KDE_USE_FINAL_FALSE@ksysguard_OBJECTS = $(ksysguard_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@ksysguard_OBJECTS = $(ksysguard_final_OBJECTS)
ksysguard_DEPENDENCIES = 
CXXFLAGS = @CXXFLAGS@
#>- CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 1
CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 1
LTCXXCOMPILE = $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@
#>+ 1
CXXLINK = $(LIBTOOL) --mode=link --tag=CXX $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(LDFLAGS) -o $@
DATA =  $(apps_DATA) $(data_DATA) $(kdemime_DATA) $(lnk_DATA) $(rc_DATA)

DIST_COMMON =  Makefile.am Makefile.in


#>- DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)
#>+ 4
KDE_DIST=ksysguardapplet.desktop KSysGuardAppletSettings.ui WorkSheet.h WorkSheetSetup.h Taskmanager.ktop SensorDisplay.h MultiMeter.h SensorShellAgent.h SensorLoggerSettings.ui ReniceDlg.cc ColorPicker.h LogFileSettings.h DummyDisplay.h WorkSheetSettings.ui LogFile.h SignalPlotter.h HostConnector.ui ksysguard.h KSysGuardApplet.xml SystemLoad.sgrd MultiMeterSettings.ui SignalIDs.h DancingBars.h SensorLogger.h SensorAgent.h DancingBarsSettings.ui x-ksysguard.desktop Workspace.h ListViewSettings.ui ksysguardui.rc SensorBrowser.h BarGraph.h ReniceDlg.h FancyPlotter.h FancyPlotterSettings.ui WorkSheetSetup.cc BarGraphSettings.ui SensorClient.h ProcessList.h KSysGuardApplet.h SensorSocketAgent.h SensorLoggerDlg.ui ProcessTable.sgrd version.h StyleEngine.h ListView.h SensorManager.h StyleSettings.ui ksysguard.desktop ProcessController.h 

DISTFILES= $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)


TAR = tar
GZIP_ENV = --best
SOURCES = $(libksysguardapplet_la_SOURCES) $(ksysguard_SOURCES)
OBJECTS = $(libksysguardapplet_la_OBJECTS) $(ksysguard_OBJECTS)

#>- all: all-redirect
#>+ 1
all: docs-am  all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .cc .lo .o .obj .s
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
#>- 	cd $(top_srcdir) && $(AUTOMAKE) --foreign --include-deps ksysguard/gui/Makefile
#>+ 2
	cd $(top_srcdir) && $(AUTOMAKE) --foreign --include-deps ksysguard/gui/Makefile
	cd $(top_srcdir) && perl admin/am_edit ksysguard/gui/Makefile.in

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	&& CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-libLTLIBRARIES:

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)

distclean-libLTLIBRARIES:

maintainer-clean-libLTLIBRARIES:

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	if test -f $$p; then \
	echo "$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p"; \
	$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(libdir)/$$p; \
	else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	$(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

.c.o:
	$(COMPILE) -c $<

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

#>- libksysguardapplet.la: $(libksysguardapplet_la_OBJECTS) $(libksysguardapplet_la_DEPENDENCIES)
#>+ 2
@KDE_USE_CLOSURE_TRUE@libksysguardapplet.la: libksysguardapplet.la.closure $(libksysguardapplet_la_OBJECTS) $(libksysguardapplet_la_DEPENDENCIES)
@KDE_USE_CLOSURE_FALSE@libksysguardapplet.la: $(libksysguardapplet_la_OBJECTS) $(libksysguardapplet_la_DEPENDENCIES)
	$(CXXLINK) -rpath $(libdir) $(libksysguardapplet_la_LDFLAGS) $(libksysguardapplet_la_OBJECTS) $(libksysguardapplet_la_LIBADD) $(LIBS)

mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	if test -f $$p; then \
	echo " $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	$(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	rm -f $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	done

ksysguard$(EXEEXT): $(ksysguard_OBJECTS) $(ksysguard_DEPENDENCIES)
	@rm -f ksysguard$(EXEEXT)
	$(CXXLINK) $(ksysguard_LDFLAGS) $(ksysguard_OBJECTS) $(ksysguard_LDADD) $(LIBS)
.cc.o:
	$(CXXCOMPILE) -c $<
.cc.obj:
	$(CXXCOMPILE) -c `cygpath -w $<`
.cc.lo:
	$(LTCXXCOMPILE) -c $<

install-appsDATA: $(apps_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(appsdir)
	@list='$(apps_DATA)'; for p in $$list; do \
	if test -f $(srcdir)/$$p; then \
	echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(appsdir)/$$p"; \
	$(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(appsdir)/$$p; \
	else if test -f $$p; then \
	echo " $(INSTALL_DATA) $$p $(DESTDIR)$(appsdir)/$$p"; \
	$(INSTALL_DATA) $$p $(DESTDIR)$(appsdir)/$$p; \
	fi; fi; \
	done

uninstall-appsDATA:
	@$(NORMAL_UNINSTALL)
	list='$(apps_DATA)'; for p in $$list; do \
	rm -f $(DESTDIR)$(appsdir)/$$p; \
	done

install-dataDATA: $(data_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(datadir)
	@list='$(data_DATA)'; for p in $$list; do \
	if test -f $(srcdir)/$$p; then \
	echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(datadir)/$$p"; \
	$(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(datadir)/$$p; \
	else if test -f $$p; then \
	echo " $(INSTALL_DATA) $$p $(DESTDIR)$(datadir)/$$p"; \
	$(INSTALL_DATA) $$p $(DESTDIR)$(datadir)/$$p; \
	fi; fi; \
	done

uninstall-dataDATA:
	@$(NORMAL_UNINSTALL)
	list='$(data_DATA)'; for p in $$list; do \
	rm -f $(DESTDIR)$(datadir)/$$p; \
	done

install-kdemimeDATA: $(kdemime_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(kdemimedir)
	@list='$(kdemime_DATA)'; for p in $$list; do \
	if test -f $(srcdir)/$$p; then \
	echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(kdemimedir)/$$p"; \
	$(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(kdemimedir)/$$p; \
	else if test -f $$p; then \
	echo " $(INSTALL_DATA) $$p $(DESTDIR)$(kdemimedir)/$$p"; \
	$(INSTALL_DATA) $$p $(DESTDIR)$(kdemimedir)/$$p; \
	fi; fi; \
	done

uninstall-kdemimeDATA:
	@$(NORMAL_UNINSTALL)
	list='$(kdemime_DATA)'; for p in $$list; do \
	rm -f $(DESTDIR)$(kdemimedir)/$$p; \
	done

install-lnkDATA: $(lnk_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(lnkdir)
	@list='$(lnk_DATA)'; for p in $$list; do \
	if test -f $(srcdir)/$$p; then \
	echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(lnkdir)/$$p"; \
	$(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(lnkdir)/$$p; \
	else if test -f $$p; then \
	echo " $(INSTALL_DATA) $$p $(DESTDIR)$(lnkdir)/$$p"; \
	$(INSTALL_DATA) $$p $(DESTDIR)$(lnkdir)/$$p; \
	fi; fi; \
	done

uninstall-lnkDATA:
	@$(NORMAL_UNINSTALL)
	list='$(lnk_DATA)'; for p in $$list; do \
	rm -f $(DESTDIR)$(lnkdir)/$$p; \
	done

install-rcDATA: $(rc_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(rcdir)
	@list='$(rc_DATA)'; for p in $$list; do \
	if test -f $(srcdir)/$$p; then \
	echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(rcdir)/$$p"; \
	$(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(rcdir)/$$p; \
	else if test -f $$p; then \
	echo " $(INSTALL_DATA) $$p $(DESTDIR)$(rcdir)/$$p"; \
	$(INSTALL_DATA) $$p $(DESTDIR)$(rcdir)/$$p; \
	fi; fi; \
	done

uninstall-rcDATA:
	@$(NORMAL_UNINSTALL)
	list='$(rc_DATA)'; for p in $$list; do \
	rm -f $(DESTDIR)$(rcdir)/$$p; \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	awk '    { files[$$0] = 1; } \
	END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	&& mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	awk '    { files[$$0] = 1; } \
	END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	|| (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = ksysguard/gui

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	d=$(srcdir); \
	if test -d $$d/$$file; then \
	cp -pr $$d/$$file $(distdir)/$$file; \
	else \
	test -f $(distdir)/$$file \
	|| ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	|| cp -p $$d/$$file $(distdir)/$$file || :; \
	fi; \
	done
info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-libLTLIBRARIES install-binPROGRAMS
install-exec: install-exec-am

install-data-am: install-appsDATA install-dataDATA install-kdemimeDATA \
	install-lnkDATA install-rcDATA
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-libLTLIBRARIES uninstall-binPROGRAMS \
	uninstall-appsDATA uninstall-dataDATA \
	uninstall-kdemimeDATA uninstall-lnkDATA \
	uninstall-rcDATA
uninstall: uninstall-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(DATA)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(libdir) $(DESTDIR)$(bindir) \
	$(DESTDIR)$(appsdir) $(DESTDIR)$(datadir) \
	$(DESTDIR)$(kdemimedir) $(DESTDIR)$(lnkdir) \
	$(DESTDIR)$(rcdir)


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-libLTLIBRARIES mostlyclean-compile \
	mostlyclean-libtool mostlyclean-binPROGRAMS \
	mostlyclean-tags mostlyclean-generic

mostlyclean: mostlyclean-am

#>- clean-am:  clean-libLTLIBRARIES clean-compile clean-libtool \
#>- clean-binPROGRAMS clean-tags clean-generic \
#>- mostlyclean-am
#>+ 3
clean-am: clean-metasources clean-idl clean-ui clean-closures clean-moc-classes clean-final   clean-libLTLIBRARIES clean-compile clean-libtool \
	clean-binPROGRAMS clean-tags clean-generic \
	mostlyclean-am

#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

distclean-am:  distclean-libLTLIBRARIES distclean-compile \
	distclean-libtool distclean-binPROGRAMS distclean-tags \
	distclean-generic clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-libLTLIBRARIES \
	maintainer-clean-compile maintainer-clean-libtool \
	maintainer-clean-binPROGRAMS maintainer-clean-tags \
	maintainer-clean-generic distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-libLTLIBRARIES distclean-libLTLIBRARIES \
	clean-libLTLIBRARIES maintainer-clean-libLTLIBRARIES \
	uninstall-libLTLIBRARIES install-libLTLIBRARIES mostlyclean-compile \
	distclean-compile clean-compile maintainer-clean-compile \
	mostlyclean-libtool distclean-libtool clean-libtool \
	maintainer-clean-libtool mostlyclean-binPROGRAMS distclean-binPROGRAMS \
	clean-binPROGRAMS maintainer-clean-binPROGRAMS uninstall-binPROGRAMS \
	install-binPROGRAMS uninstall-appsDATA install-appsDATA \
	uninstall-dataDATA install-dataDATA uninstall-kdemimeDATA \
	install-kdemimeDATA uninstall-lnkDATA install-lnkDATA uninstall-rcDATA \
	install-rcDATA tags mostlyclean-tags distclean-tags clean-tags \
	maintainer-clean-tags distdir info-am info dvi-am dvi check check-am \
	installcheck-am installcheck install-exec-am install-exec \
	install-data-am install-data install-am install uninstall-am uninstall \
	all-redirect all-am all installdirs mostlyclean-generic \
	distclean-generic clean-generic maintainer-clean-generic clean \
	mostlyclean distclean maintainer-clean


messages: rc.cpp
	$(XGETTEXT) *.cpp *.cc -o $(podir)/ksysguard.pot

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 8
libksysguardapplet.la.closure: $(libksysguardapplet_la_OBJECTS) $(libksysguardapplet_la_DEPENDENCIES)
	@echo "int main() {return 0;}" > libksysguardapplet_la_closure.cc
	@$(LTCXXCOMPILE) -c libksysguardapplet_la_closure.cc
	$(CXXLINK) libksysguardapplet_la_closure.lo $(libksysguardapplet_la_LDFLAGS) $(libksysguardapplet_la_OBJECTS) $(libksysguardapplet_la_LIBADD) $(LIBS)
	@rm -f libksysguardapplet_la_closure.* libksysguardapplet.la.closure
	@echo "timestamp" > libksysguardapplet.la.closure


#>+ 45
FancyPlotterSettings.cc: $(srcdir)/FancyPlotterSettings.ui FancyPlotterSettings.h FancyPlotterSettings.moc
	rm -f FancyPlotterSettings.cc
	echo '#include <klocale.h>' > FancyPlotterSettings.cc
	$(UIC) -tr ${UIC_TR} -i FancyPlotterSettings.h $(srcdir)/FancyPlotterSettings.ui | sed -e "s,${UIC_TR}( \"\" ),QString::null,g" | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" >> FancyPlotterSettings.cc || rm -f FancyPlotterSettings.cc
	echo '#include "FancyPlotterSettings.moc"' >> FancyPlotterSettings.cc

FancyPlotterSettings.h: $(srcdir)/FancyPlotterSettings.ui
	$(UIC) -o FancyPlotterSettings.h $(srcdir)/FancyPlotterSettings.ui

FancyPlotterSettings.moc: FancyPlotterSettings.h
	$(MOC) FancyPlotterSettings.h -o FancyPlotterSettings.moc
HostConnector.cc: $(srcdir)/HostConnector.ui HostConnector.h HostConnector.moc
	rm -f HostConnector.cc
	echo '#include <klocale.h>' > HostConnector.cc
	$(UIC) -tr ${UIC_TR} -i HostConnector.h $(srcdir)/HostConnector.ui | sed -e "s,${UIC_TR}( \"\" ),QString::null,g" | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" >> HostConnector.cc || rm -f HostConnector.cc
	echo '#include "HostConnector.moc"' >> HostConnector.cc

HostConnector.h: $(srcdir)/HostConnector.ui
	$(UIC) -o HostConnector.h $(srcdir)/HostConnector.ui

HostConnector.moc: HostConnector.h
	$(MOC) HostConnector.h -o HostConnector.moc
KSysGuardAppletSettings.cc: $(srcdir)/KSysGuardAppletSettings.ui KSysGuardAppletSettings.h KSysGuardAppletSettings.moc
	rm -f KSysGuardAppletSettings.cc
	echo '#include <klocale.h>' > KSysGuardAppletSettings.cc
	$(UIC) -tr ${UIC_TR} -i KSysGuardAppletSettings.h $(srcdir)/KSysGuardAppletSettings.ui | sed -e "s,${UIC_TR}( \"\" ),QString::null,g" | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" >> KSysGuardAppletSettings.cc || rm -f KSysGuardAppletSettings.cc
	echo '#include "KSysGuardAppletSettings.moc"' >> KSysGuardAppletSettings.cc

KSysGuardAppletSettings.h: $(srcdir)/KSysGuardAppletSettings.ui
	$(UIC) -o KSysGuardAppletSettings.h $(srcdir)/KSysGuardAppletSettings.ui

KSysGuardAppletSettings.moc: KSysGuardAppletSettings.h
	$(MOC) KSysGuardAppletSettings.h -o KSysGuardAppletSettings.moc
StyleSettings.cc: $(srcdir)/StyleSettings.ui StyleSettings.h StyleSettings.moc
	rm -f StyleSettings.cc
	echo '#include <klocale.h>' > StyleSettings.cc
	$(UIC) -tr ${UIC_TR} -i StyleSettings.h $(srcdir)/StyleSettings.ui | sed -e "s,${UIC_TR}( \"\" ),QString::null,g" | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" >> StyleSettings.cc || rm -f StyleSettings.cc
	echo '#include "StyleSettings.moc"' >> StyleSettings.cc

StyleSettings.h: $(srcdir)/StyleSettings.ui
	$(UIC) -o StyleSettings.h $(srcdir)/StyleSettings.ui

StyleSettings.moc: StyleSettings.h
	$(MOC) StyleSettings.h -o StyleSettings.moc

#>+ 3
SensorBrowser.moc: $(srcdir)/SensorBrowser.h
	$(MOC) $(srcdir)/SensorBrowser.h -o SensorBrowser.moc

#>+ 3
ListView.moc: $(srcdir)/ListView.h
	$(MOC) $(srcdir)/ListView.h -o ListView.moc

#>+ 3
DancingBars.moc: $(srcdir)/DancingBars.h
	$(MOC) $(srcdir)/DancingBars.h -o DancingBars.moc

#>+ 3
LogFileSettings.moc: $(srcdir)/LogFileSettings.h
	$(MOC) $(srcdir)/LogFileSettings.h -o LogFileSettings.moc

#>+ 3
SensorManager.moc: $(srcdir)/SensorManager.h
	$(MOC) $(srcdir)/SensorManager.h -o SensorManager.moc

#>+ 3
ReniceDlg.moc: $(srcdir)/ReniceDlg.h
	$(MOC) $(srcdir)/ReniceDlg.h -o ReniceDlg.moc

#>+ 3
SensorShellAgent.moc: $(srcdir)/SensorShellAgent.h
	$(MOC) $(srcdir)/SensorShellAgent.h -o SensorShellAgent.moc

#>+ 3
DummyDisplay.moc: $(srcdir)/DummyDisplay.h
	$(MOC) $(srcdir)/DummyDisplay.h -o DummyDisplay.moc

#>+ 3
SensorLogger.moc: $(srcdir)/SensorLogger.h
	$(MOC) $(srcdir)/SensorLogger.h -o SensorLogger.moc

#>+ 3
MultiMeter.moc: $(srcdir)/MultiMeter.h
	$(MOC) $(srcdir)/MultiMeter.h -o MultiMeter.moc

#>+ 3
WorkSheet.moc: $(srcdir)/WorkSheet.h
	$(MOC) $(srcdir)/WorkSheet.h -o WorkSheet.moc

#>+ 3
Workspace.moc: $(srcdir)/Workspace.h
	$(MOC) $(srcdir)/Workspace.h -o Workspace.moc

#>+ 3
BarGraph.moc: $(srcdir)/BarGraph.h
	$(MOC) $(srcdir)/BarGraph.h -o BarGraph.moc

#>+ 3
ColorPicker.moc: $(srcdir)/ColorPicker.h
	$(MOC) $(srcdir)/ColorPicker.h -o ColorPicker.moc

#>+ 3
ProcessController.moc: $(srcdir)/ProcessController.h
	$(MOC) $(srcdir)/ProcessController.h -o ProcessController.moc

#>+ 3
SensorAgent.moc: $(srcdir)/SensorAgent.h
	$(MOC) $(srcdir)/SensorAgent.h -o SensorAgent.moc

#>+ 3
FancyPlotter.moc: $(srcdir)/FancyPlotter.h
	$(MOC) $(srcdir)/FancyPlotter.h -o FancyPlotter.moc

#>+ 3
KSysGuardApplet.moc: $(srcdir)/KSysGuardApplet.h
	$(MOC) $(srcdir)/KSysGuardApplet.h -o KSysGuardApplet.moc

#>+ 3
WorkSheetSetup.moc: $(srcdir)/WorkSheetSetup.h
	$(MOC) $(srcdir)/WorkSheetSetup.h -o WorkSheetSetup.moc

#>+ 3
SensorSocketAgent.moc: $(srcdir)/SensorSocketAgent.h
	$(MOC) $(srcdir)/SensorSocketAgent.h -o SensorSocketAgent.moc

#>+ 3
LogFile.moc: $(srcdir)/LogFile.h
	$(MOC) $(srcdir)/LogFile.h -o LogFile.moc

#>+ 3
SignalPlotter.moc: $(srcdir)/SignalPlotter.h
	$(MOC) $(srcdir)/SignalPlotter.h -o SignalPlotter.moc

#>+ 3
ksysguard.moc: $(srcdir)/ksysguard.h
	$(MOC) $(srcdir)/ksysguard.h -o ksysguard.moc

#>+ 3
StyleEngine.moc: $(srcdir)/StyleEngine.h
	$(MOC) $(srcdir)/StyleEngine.h -o StyleEngine.moc

#>+ 3
SensorDisplay.moc: $(srcdir)/SensorDisplay.h
	$(MOC) $(srcdir)/SensorDisplay.h -o SensorDisplay.moc

#>+ 3
ProcessList.moc: $(srcdir)/ProcessList.h
	$(MOC) $(srcdir)/ProcessList.h -o ProcessList.moc

#>+ 5
ksysguard.kidl: $(srcdir)/ksysguard.h $(DCOPIDL_DEPENDENCIES)
	$(DCOPIDL) $(srcdir)/ksysguard.h > ksysguard.kidl || ( rm -f ksysguard.kidl ; /bin/false )
ksysguard_skel.cc: ksysguard.kidl
	$(DCOPIDL2CPP) --c++-suffix cc --no-stub ksysguard.kidl

#>+ 78
DancingBarsSettings.cc: $(srcdir)/DancingBarsSettings.ui DancingBarsSettings.h DancingBarsSettings.moc
	rm -f DancingBarsSettings.cc
	echo '#include <klocale.h>' > DancingBarsSettings.cc
	$(UIC) -tr ${UIC_TR} -i DancingBarsSettings.h $(srcdir)/DancingBarsSettings.ui | sed -e "s,${UIC_TR}( \"\" ),QString::null,g" | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" >> DancingBarsSettings.cc || rm -f DancingBarsSettings.cc
	echo '#include "DancingBarsSettings.moc"' >> DancingBarsSettings.cc

DancingBarsSettings.h: $(srcdir)/DancingBarsSettings.ui
	$(UIC) -o DancingBarsSettings.h $(srcdir)/DancingBarsSettings.ui

DancingBarsSettings.moc: DancingBarsSettings.h
	$(MOC) DancingBarsSettings.h -o DancingBarsSettings.moc
MultiMeterSettings.cc: $(srcdir)/MultiMeterSettings.ui MultiMeterSettings.h MultiMeterSettings.moc
	rm -f MultiMeterSettings.cc
	echo '#include <klocale.h>' > MultiMeterSettings.cc
	$(UIC) -tr ${UIC_TR} -i MultiMeterSettings.h $(srcdir)/MultiMeterSettings.ui | sed -e "s,${UIC_TR}( \"\" ),QString::null,g" | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" >> MultiMeterSettings.cc || rm -f MultiMeterSettings.cc
	echo '#include "MultiMeterSettings.moc"' >> MultiMeterSettings.cc

MultiMeterSettings.h: $(srcdir)/MultiMeterSettings.ui
	$(UIC) -o MultiMeterSettings.h $(srcdir)/MultiMeterSettings.ui

MultiMeterSettings.moc: MultiMeterSettings.h
	$(MOC) MultiMeterSettings.h -o MultiMeterSettings.moc
WorkSheetSettings.cc: $(srcdir)/WorkSheetSettings.ui WorkSheetSettings.h WorkSheetSettings.moc
	rm -f WorkSheetSettings.cc
	echo '#include <klocale.h>' > WorkSheetSettings.cc
	$(UIC) -tr ${UIC_TR} -i WorkSheetSettings.h $(srcdir)/WorkSheetSettings.ui | sed -e "s,${UIC_TR}( \"\" ),QString::null,g" | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" >> WorkSheetSettings.cc || rm -f WorkSheetSettings.cc
	echo '#include "WorkSheetSettings.moc"' >> WorkSheetSettings.cc

WorkSheetSettings.h: $(srcdir)/WorkSheetSettings.ui
	$(UIC) -o WorkSheetSettings.h $(srcdir)/WorkSheetSettings.ui

WorkSheetSettings.moc: WorkSheetSettings.h
	$(MOC) WorkSheetSettings.h -o WorkSheetSettings.moc
ListViewSettings.cc: $(srcdir)/ListViewSettings.ui ListViewSettings.h ListViewSettings.moc
	rm -f ListViewSettings.cc
	echo '#include <klocale.h>' > ListViewSettings.cc
	$(UIC) -tr ${UIC_TR} -i ListViewSettings.h $(srcdir)/ListViewSettings.ui | sed -e "s,${UIC_TR}( \"\" ),QString::null,g" | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" >> ListViewSettings.cc || rm -f ListViewSettings.cc
	echo '#include "ListViewSettings.moc"' >> ListViewSettings.cc

ListViewSettings.h: $(srcdir)/ListViewSettings.ui
	$(UIC) -o ListViewSettings.h $(srcdir)/ListViewSettings.ui

ListViewSettings.moc: ListViewSettings.h
	$(MOC) ListViewSettings.h -o ListViewSettings.moc
BarGraphSettings.cc: $(srcdir)/BarGraphSettings.ui BarGraphSettings.h BarGraphSettings.moc
	rm -f BarGraphSettings.cc
	echo '#include <klocale.h>' > BarGraphSettings.cc
	$(UIC) -tr ${UIC_TR} -i BarGraphSettings.h $(srcdir)/BarGraphSettings.ui | sed -e "s,${UIC_TR}( \"\" ),QString::null,g" | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" >> BarGraphSettings.cc || rm -f BarGraphSettings.cc
	echo '#include "BarGraphSettings.moc"' >> BarGraphSettings.cc

BarGraphSettings.h: $(srcdir)/BarGraphSettings.ui
	$(UIC) -o BarGraphSettings.h $(srcdir)/BarGraphSettings.ui

BarGraphSettings.moc: BarGraphSettings.h
	$(MOC) BarGraphSettings.h -o BarGraphSettings.moc
SensorLoggerDlg.cc: $(srcdir)/SensorLoggerDlg.ui SensorLoggerDlg.h SensorLoggerDlg.moc
	rm -f SensorLoggerDlg.cc
	echo '#include <klocale.h>' > SensorLoggerDlg.cc
	$(UIC) -tr ${UIC_TR} -i SensorLoggerDlg.h $(srcdir)/SensorLoggerDlg.ui | sed -e "s,${UIC_TR}( \"\" ),QString::null,g" | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" >> SensorLoggerDlg.cc || rm -f SensorLoggerDlg.cc
	echo '#include "SensorLoggerDlg.moc"' >> SensorLoggerDlg.cc

SensorLoggerDlg.h: $(srcdir)/SensorLoggerDlg.ui
	$(UIC) -o SensorLoggerDlg.h $(srcdir)/SensorLoggerDlg.ui

SensorLoggerDlg.moc: SensorLoggerDlg.h
	$(MOC) SensorLoggerDlg.h -o SensorLoggerDlg.moc
SensorLoggerSettings.cc: $(srcdir)/SensorLoggerSettings.ui SensorLoggerSettings.h SensorLoggerSettings.moc
	rm -f SensorLoggerSettings.cc
	echo '#include <klocale.h>' > SensorLoggerSettings.cc
	$(UIC) -tr ${UIC_TR} -i SensorLoggerSettings.h $(srcdir)/SensorLoggerSettings.ui | sed -e "s,${UIC_TR}( \"\" ),QString::null,g" | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" >> SensorLoggerSettings.cc || rm -f SensorLoggerSettings.cc
	echo '#include "SensorLoggerSettings.moc"' >> SensorLoggerSettings.cc

SensorLoggerSettings.h: $(srcdir)/SensorLoggerSettings.ui
	$(UIC) -o SensorLoggerSettings.h $(srcdir)/SensorLoggerSettings.ui

SensorLoggerSettings.moc: SensorLoggerSettings.h
	$(MOC) SensorLoggerSettings.h -o SensorLoggerSettings.moc

#>+ 3
clean-metasources:
	-rm -f  SensorBrowser.moc ListView.moc DancingBars.moc LogFileSettings.moc SensorManager.moc ReniceDlg.moc SensorShellAgent.moc DummyDisplay.moc SensorLogger.moc MultiMeter.moc WorkSheet.moc Workspace.moc BarGraph.moc ColorPicker.moc ProcessController.moc SensorAgent.moc FancyPlotter.moc KSysGuardApplet.moc WorkSheetSetup.moc SensorSocketAgent.moc LogFile.moc SignalPlotter.moc ksysguard.moc StyleEngine.moc SensorDisplay.moc ProcessList.moc

#>+ 4
clean-idl:
	-rm -f \
	ksysguard_skel.cc ksysguard_skel.h ksysguard.kidl 

#>+ 17
clean-ui:
	-rm -f \
	FancyPlotterSettings.cc FancyPlotterSettings.h FancyPlotterSettings.moc \
	HostConnector.cc HostConnector.h HostConnector.moc \
	KSysGuardAppletSettings.cc KSysGuardAppletSettings.h KSysGuardAppletSettings.moc \
	StyleSettings.cc StyleSettings.h StyleSettings.moc \
	DancingBarsSettings.cc DancingBarsSettings.h DancingBarsSettings.moc \
	MultiMeterSettings.cc MultiMeterSettings.h MultiMeterSettings.moc \
	FancyPlotterSettings.cc FancyPlotterSettings.h FancyPlotterSettings.moc \
	HostConnector.cc HostConnector.h HostConnector.moc \
	WorkSheetSettings.cc WorkSheetSettings.h WorkSheetSettings.moc \
	ListViewSettings.cc ListViewSettings.h ListViewSettings.moc \
	BarGraphSettings.cc BarGraphSettings.h BarGraphSettings.moc \
	StyleSettings.cc StyleSettings.h StyleSettings.moc \
	SensorLoggerDlg.cc SensorLoggerDlg.h SensorLoggerDlg.moc \
	SensorLoggerSettings.cc SensorLoggerSettings.h SensorLoggerSettings.moc 

#>+ 3
clean-closures:
	-rm -f  libksysguardapplet.la.closure

#>+ 2
docs-am:

#>+ 5
force-reedit:
		cd $(top_srcdir) && $(AUTOMAKE) --foreign --include-deps ksysguard/gui/Makefile
	cd $(top_srcdir) && perl admin/am_edit ksysguard/gui/Makefile.in


#>+ 12
libksysguardapplet_la_meta_unload.cc:  SensorShellAgent.moc SignalPlotter.moc SensorManager.moc ColorPicker.moc SensorAgent.moc FancyPlotter.moc KSysGuardApplet.moc SensorSocketAgent.moc StyleEngine.moc SensorDisplay.moc
	@echo 'creating libksysguardapplet_la_meta_unload.cc'
	@-rm -f libksysguardapplet_la_meta_unload.cc
	@if test ${kde_qtver} = 2; then \
		echo 'static const char * _metalist_libksysguardapplet_la[] = {' > libksysguardapplet_la_meta_unload.cc ;\
		cat  SensorShellAgent.moc SignalPlotter.moc SensorManager.moc ColorPicker.moc SensorAgent.moc FancyPlotter.moc KSysGuardApplet.moc SensorSocketAgent.moc StyleEngine.moc SensorDisplay.moc | grep 'char.*className' | sed -e 's/.*[^A-Za-z0-9_:]\([A-Za-z0-9_:]*\)::className.*$$/\"\1\",/' | sort | uniq >> libksysguardapplet_la_meta_unload.cc ;\
		echo '0};' >> libksysguardapplet_la_meta_unload.cc ;\
		echo '#include <kunload.h>' >> libksysguardapplet_la_meta_unload.cc ;\
		echo '_UNLOAD(libksysguardapplet_la)' >> libksysguardapplet_la_meta_unload.cc ;\
	else echo > libksysguardapplet_la_meta_unload.cc; fi


#>+ 12
ksysguard_meta_unload.cc:  SensorBrowser.moc LogFileSettings.moc DummyDisplay.moc SensorShellAgent.moc MultiMeter.moc WorkSheet.moc ProcessController.moc BarGraph.moc LogFile.moc SignalPlotter.moc ksysguard.moc ListView.moc DancingBars.moc SensorManager.moc SensorLogger.moc Workspace.moc ColorPicker.moc SensorAgent.moc FancyPlotter.moc SensorSocketAgent.moc StyleEngine.moc SensorDisplay.moc ProcessList.moc
	@echo 'creating ksysguard_meta_unload.cc'
	@-rm -f ksysguard_meta_unload.cc
	@if test ${kde_qtver} = 2; then \
		echo 'static const char * _metalist_ksysguard[] = {' > ksysguard_meta_unload.cc ;\
		cat  SensorBrowser.moc LogFileSettings.moc DummyDisplay.moc SensorShellAgent.moc MultiMeter.moc WorkSheet.moc ProcessController.moc BarGraph.moc LogFile.moc SignalPlotter.moc ksysguard.moc ListView.moc DancingBars.moc SensorManager.moc SensorLogger.moc Workspace.moc ColorPicker.moc SensorAgent.moc FancyPlotter.moc SensorSocketAgent.moc StyleEngine.moc SensorDisplay.moc ProcessList.moc | grep 'char.*className' | sed -e 's/.*[^A-Za-z0-9_:]\([A-Za-z0-9_:]*\)::className.*$$/\"\1\",/' | sort | uniq >> ksysguard_meta_unload.cc ;\
		echo '0};' >> ksysguard_meta_unload.cc ;\
		echo '#include <kunload.h>' >> ksysguard_meta_unload.cc ;\
		echo '_UNLOAD(ksysguard)' >> ksysguard_meta_unload.cc ;\
	else echo > ksysguard_meta_unload.cc; fi


#>+ 3
clean-moc-classes:
	-rm -f  libksysguardapplet_la_meta_unload.cc ksysguard_meta_unload.cc

#>+ 11
libksysguardapplet_la.all_cc.cc: $(srcdir)/Makefile.in $(srcdir)/ColorPicker.cc $(srcdir)/FancyPlotter.cc $(srcdir)/SignalPlotter.cc $(srcdir)/SensorDisplay.cc $(srcdir)/StyleEngine.cc $(srcdir)/SensorManager.cc $(srcdir)/SensorAgent.cc $(srcdir)/SensorShellAgent.cc $(srcdir)/SensorSocketAgent.cc $(srcdir)/KSysGuardApplet.cc FancyPlotterSettings.cc HostConnector.cc KSysGuardAppletSettings.cc StyleSettings.cc libksysguardapplet_la_meta_unload.cc   FancyPlotterSettings.moc HostConnector.moc KSysGuardAppletSettings.moc StyleSettings.moc SensorBrowser.moc ListView.moc DancingBars.moc LogFileSettings.moc SensorManager.moc ReniceDlg.moc SensorShellAgent.moc DummyDisplay.moc SensorLogger.moc MultiMeter.moc WorkSheet.moc Workspace.moc BarGraph.moc ColorPicker.moc ProcessController.moc SensorAgent.moc FancyPlotter.moc KSysGuardApplet.moc WorkSheetSetup.moc SensorSocketAgent.moc LogFile.moc SignalPlotter.moc ksysguard.moc StyleEngine.moc SensorDisplay.moc ProcessList.moc 
	@echo 'creating libksysguardapplet_la.all_cc.cc ...'; \
	rm -f libksysguardapplet_la.all_cc.files libksysguardapplet_la.all_cc.final; \
	echo "#define KDE_USE_FINAL 1" >> libksysguardapplet_la.all_cc.final; \
	for file in ColorPicker.cc FancyPlotter.cc SignalPlotter.cc SensorDisplay.cc StyleEngine.cc SensorManager.cc SensorAgent.cc SensorShellAgent.cc SensorSocketAgent.cc KSysGuardApplet.cc FancyPlotterSettings.cc HostConnector.cc KSysGuardAppletSettings.cc StyleSettings.cc libksysguardapplet_la_meta_unload.cc ; do \
	  echo "#include \"$$file\"" >> libksysguardapplet_la.all_cc.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> libksysguardapplet_la.all_cc.final; \
	done; \
	cat libksysguardapplet_la.all_cc.final libksysguardapplet_la.all_cc.files  > libksysguardapplet_la.all_cc.cc; \
	rm -f libksysguardapplet_la.all_cc.final libksysguardapplet_la.all_cc.files

#>+ 11
ksysguard.all_cc.cc: $(srcdir)/Makefile.in $(srcdir)/ColorPicker.cc $(srcdir)/SensorDisplay.cc $(srcdir)/DummyDisplay.cc $(srcdir)/FancyPlotter.cc $(srcdir)/SignalPlotter.cc $(srcdir)/MultiMeter.cc $(srcdir)/DancingBars.cc $(srcdir)/BarGraph.cc $(srcdir)/ProcessController.cc $(srcdir)/ProcessList.cc $(srcdir)/ListView.cc $(srcdir)/LogFile.cc $(srcdir)/LogFileSettings.cc $(srcdir)/StyleEngine.cc $(srcdir)/SensorLogger.cc $(srcdir)/SensorBrowser.cc $(srcdir)/SensorManager.cc $(srcdir)/SensorAgent.cc $(srcdir)/SensorShellAgent.cc $(srcdir)/SensorSocketAgent.cc $(srcdir)/WorkSheet.cc $(srcdir)/Workspace.cc $(srcdir)/ksysguard.cc ksysguard_skel.cc DancingBarsSettings.cc MultiMeterSettings.cc FancyPlotterSettings.cc HostConnector.cc WorkSheetSettings.cc ListViewSettings.cc BarGraphSettings.cc StyleSettings.cc SensorLoggerDlg.cc SensorLoggerSettings.cc ksysguard_meta_unload.cc   DancingBarsSettings.moc MultiMeterSettings.moc WorkSheetSettings.moc ListViewSettings.moc BarGraphSettings.moc SensorLoggerDlg.moc SensorLoggerSettings.moc
	@echo 'creating ksysguard.all_cc.cc ...'; \
	rm -f ksysguard.all_cc.files ksysguard.all_cc.final; \
	echo "#define KDE_USE_FINAL 1" >> ksysguard.all_cc.final; \
	for file in ColorPicker.cc SensorDisplay.cc DummyDisplay.cc FancyPlotter.cc SignalPlotter.cc MultiMeter.cc DancingBars.cc BarGraph.cc ProcessController.cc ProcessList.cc ListView.cc LogFile.cc LogFileSettings.cc StyleEngine.cc SensorLogger.cc SensorBrowser.cc SensorManager.cc SensorAgent.cc SensorShellAgent.cc SensorSocketAgent.cc WorkSheet.cc Workspace.cc ksysguard.cc ksysguard_skel.cc DancingBarsSettings.cc MultiMeterSettings.cc FancyPlotterSettings.cc HostConnector.cc WorkSheetSettings.cc ListViewSettings.cc BarGraphSettings.cc StyleSettings.cc SensorLoggerDlg.cc SensorLoggerSettings.cc ksysguard_meta_unload.cc ; do \
	  echo "#include \"$$file\"" >> ksysguard.all_cc.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> ksysguard.all_cc.final; \
	done; \
	cat ksysguard.all_cc.final ksysguard.all_cc.files  > ksysguard.all_cc.cc; \
	rm -f ksysguard.all_cc.final ksysguard.all_cc.files

#>+ 3
clean-final:
	-rm -f libksysguardapplet_la.all_cc.cc ksysguard.all_cc.cc

#>+ 2
final:
	$(MAKE) libksysguardapplet_la_OBJECTS="$(libksysguardapplet_la_final_OBJECTS)" ksysguard_OBJECTS="$(ksysguard_final_OBJECTS)" all-am
#>+ 2
final-install:
	$(MAKE) libksysguardapplet_la_OBJECTS="$(libksysguardapplet_la_final_OBJECTS)" ksysguard_OBJECTS="$(ksysguard_final_OBJECTS)" install-am
#>+ 2
no-final:
	$(MAKE) libksysguardapplet_la_OBJECTS="$(libksysguardapplet_la_nofinal_OBJECTS)" ksysguard_OBJECTS="$(ksysguard_nofinal_OBJECTS)" all-am
#>+ 2
no-final-install:
	$(MAKE) libksysguardapplet_la_OBJECTS="$(libksysguardapplet_la_nofinal_OBJECTS)" ksysguard_OBJECTS="$(ksysguard_nofinal_OBJECTS)" install-am
#>+ 3
cvs-clean:
	$(MAKE) -f $(top_srcdir)/admin/Makefile.common cvs-clean

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 27
$(srcdir)/LogFileSettings.cc: LogFileSettings.moc DancingBarsSettings.h MultiMeterSettings.h FancyPlotterSettings.h HostConnector.h WorkSheetSettings.h ListViewSettings.h BarGraphSettings.h StyleSettings.h SensorLoggerDlg.h SensorLoggerSettings.h 
$(srcdir)/SensorAgent.cc: SensorAgent.moc FancyPlotterSettings.h HostConnector.h KSysGuardAppletSettings.h StyleSettings.h DancingBarsSettings.h MultiMeterSettings.h FancyPlotterSettings.h HostConnector.h WorkSheetSettings.h ListViewSettings.h BarGraphSettings.h StyleSettings.h SensorLoggerDlg.h SensorLoggerSettings.h 
$(srcdir)/SensorSocketAgent.cc: SensorSocketAgent.moc FancyPlotterSettings.h HostConnector.h KSysGuardAppletSettings.h StyleSettings.h DancingBarsSettings.h MultiMeterSettings.h FancyPlotterSettings.h HostConnector.h WorkSheetSettings.h ListViewSettings.h BarGraphSettings.h StyleSettings.h SensorLoggerDlg.h SensorLoggerSettings.h 
$(srcdir)/WorkSheet.cc: WorkSheet.moc DancingBarsSettings.h MultiMeterSettings.h FancyPlotterSettings.h HostConnector.h WorkSheetSettings.h ListViewSettings.h BarGraphSettings.h StyleSettings.h SensorLoggerDlg.h SensorLoggerSettings.h 
$(srcdir)/FancyPlotter.cc: FancyPlotter.moc FancyPlotterSettings.h HostConnector.h KSysGuardAppletSettings.h StyleSettings.h DancingBarsSettings.h MultiMeterSettings.h FancyPlotterSettings.h HostConnector.h WorkSheetSettings.h ListViewSettings.h BarGraphSettings.h StyleSettings.h SensorLoggerDlg.h SensorLoggerSettings.h 
$(srcdir)/ProcessList.cc: ProcessList.moc DancingBarsSettings.h MultiMeterSettings.h FancyPlotterSettings.h HostConnector.h WorkSheetSettings.h ListViewSettings.h BarGraphSettings.h StyleSettings.h SensorLoggerDlg.h SensorLoggerSettings.h 
$(srcdir)/LogFile.cc: LogFile.moc DancingBarsSettings.h MultiMeterSettings.h FancyPlotterSettings.h HostConnector.h WorkSheetSettings.h ListViewSettings.h BarGraphSettings.h StyleSettings.h SensorLoggerDlg.h SensorLoggerSettings.h 
$(srcdir)/StyleEngine.cc: StyleEngine.moc FancyPlotterSettings.h HostConnector.h KSysGuardAppletSettings.h StyleSettings.h DancingBarsSettings.h MultiMeterSettings.h FancyPlotterSettings.h HostConnector.h WorkSheetSettings.h ListViewSettings.h BarGraphSettings.h StyleSettings.h SensorLoggerDlg.h SensorLoggerSettings.h 
$(srcdir)/SensorBrowser.cc: SensorBrowser.moc DancingBarsSettings.h MultiMeterSettings.h FancyPlotterSettings.h HostConnector.h WorkSheetSettings.h ListViewSettings.h BarGraphSettings.h StyleSettings.h SensorLoggerDlg.h SensorLoggerSettings.h 
$(srcdir)/DancingBars.cc: DancingBars.moc DancingBarsSettings.h MultiMeterSettings.h FancyPlotterSettings.h HostConnector.h WorkSheetSettings.h ListViewSettings.h BarGraphSettings.h StyleSettings.h SensorLoggerDlg.h SensorLoggerSettings.h 
$(srcdir)/MultiMeter.cc: MultiMeter.moc DancingBarsSettings.h MultiMeterSettings.h FancyPlotterSettings.h HostConnector.h WorkSheetSettings.h ListViewSettings.h BarGraphSettings.h StyleSettings.h SensorLoggerDlg.h SensorLoggerSettings.h 
$(srcdir)/SensorManager.cc: SensorManager.moc FancyPlotterSettings.h HostConnector.h KSysGuardAppletSettings.h StyleSettings.h DancingBarsSettings.h MultiMeterSettings.h FancyPlotterSettings.h HostConnector.h WorkSheetSettings.h ListViewSettings.h BarGraphSettings.h StyleSettings.h SensorLoggerDlg.h SensorLoggerSettings.h 
$(srcdir)/ReniceDlg.cc: ReniceDlg.moc 
$(srcdir)/ProcessController.cc: ProcessController.moc DancingBarsSettings.h MultiMeterSettings.h FancyPlotterSettings.h HostConnector.h WorkSheetSettings.h ListViewSettings.h BarGraphSettings.h StyleSettings.h SensorLoggerDlg.h SensorLoggerSettings.h 
$(srcdir)/ksysguard.cc: ksysguard.moc DancingBarsSettings.h MultiMeterSettings.h FancyPlotterSettings.h HostConnector.h WorkSheetSettings.h ListViewSettings.h BarGraphSettings.h StyleSettings.h SensorLoggerDlg.h SensorLoggerSettings.h 
$(srcdir)/WorkSheetSetup.cc: WorkSheetSetup.moc 
$(srcdir)/DummyDisplay.cc: DummyDisplay.moc DancingBarsSettings.h MultiMeterSettings.h FancyPlotterSettings.h HostConnector.h WorkSheetSettings.h ListViewSettings.h BarGraphSettings.h StyleSettings.h SensorLoggerDlg.h SensorLoggerSettings.h 
$(srcdir)/SensorDisplay.cc: SensorDisplay.moc FancyPlotterSettings.h HostConnector.h KSysGuardAppletSettings.h StyleSettings.h DancingBarsSettings.h MultiMeterSettings.h FancyPlotterSettings.h HostConnector.h WorkSheetSettings.h ListViewSettings.h BarGraphSettings.h StyleSettings.h SensorLoggerDlg.h SensorLoggerSettings.h 
$(srcdir)/BarGraph.cc: BarGraph.moc DancingBarsSettings.h MultiMeterSettings.h FancyPlotterSettings.h HostConnector.h WorkSheetSettings.h ListViewSettings.h BarGraphSettings.h StyleSettings.h SensorLoggerDlg.h SensorLoggerSettings.h 
$(srcdir)/ListView.cc: ListView.moc DancingBarsSettings.h MultiMeterSettings.h FancyPlotterSettings.h HostConnector.h WorkSheetSettings.h ListViewSettings.h BarGraphSettings.h StyleSettings.h SensorLoggerDlg.h SensorLoggerSettings.h 
$(srcdir)/SensorLogger.cc: SensorLogger.moc DancingBarsSettings.h MultiMeterSettings.h FancyPlotterSettings.h HostConnector.h WorkSheetSettings.h ListViewSettings.h BarGraphSettings.h StyleSettings.h SensorLoggerDlg.h SensorLoggerSettings.h 
$(srcdir)/SensorShellAgent.cc: SensorShellAgent.moc FancyPlotterSettings.h HostConnector.h KSysGuardAppletSettings.h StyleSettings.h DancingBarsSettings.h MultiMeterSettings.h FancyPlotterSettings.h HostConnector.h WorkSheetSettings.h ListViewSettings.h BarGraphSettings.h StyleSettings.h SensorLoggerDlg.h SensorLoggerSettings.h 
$(srcdir)/SignalPlotter.cc: SignalPlotter.moc FancyPlotterSettings.h HostConnector.h KSysGuardAppletSettings.h StyleSettings.h DancingBarsSettings.h MultiMeterSettings.h FancyPlotterSettings.h HostConnector.h WorkSheetSettings.h ListViewSettings.h BarGraphSettings.h StyleSettings.h SensorLoggerDlg.h SensorLoggerSettings.h 
$(srcdir)/KSysGuardApplet.cc: KSysGuardApplet.moc FancyPlotterSettings.h HostConnector.h KSysGuardAppletSettings.h StyleSettings.h 
$(srcdir)/Workspace.cc: Workspace.moc DancingBarsSettings.h MultiMeterSettings.h FancyPlotterSettings.h HostConnector.h WorkSheetSettings.h ListViewSettings.h BarGraphSettings.h StyleSettings.h SensorLoggerDlg.h SensorLoggerSettings.h 
$(srcdir)/ColorPicker.cc: ColorPicker.moc FancyPlotterSettings.h HostConnector.h KSysGuardAppletSettings.h StyleSettings.h DancingBarsSettings.h MultiMeterSettings.h FancyPlotterSettings.h HostConnector.h WorkSheetSettings.h ListViewSettings.h BarGraphSettings.h StyleSettings.h SensorLoggerDlg.h SensorLoggerSettings.h 
